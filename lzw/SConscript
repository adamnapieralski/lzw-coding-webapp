# -*- mode: Python; -*- scons script

import os, platform, shutil

Import('env', 'python_version', 'test_opt')

def copyLibBuilder( target, source, env):
    '''copies library'''
    shutil.copy( str(source[0]), str(target[0]) )
    return

# paths
env.Append( ENV = {'PATH' : os.environ['PATH'] })

if(platform.system() == "Linux"):
    
    env.Append( CPPPATH = ['/usr/include/python{}'.format(str(python_version))] )
    env.Append( LIBPATH = ['/usr/lib/python{}'.format(str(python_version))] )

    env.Append( CPPFLAGS = '-Wall -std=c++11 -pedantic -pthread' )
    env.Append( LINKFLAGS = '-Wall -pthread' )
    if float(python_version) >= 3:
        if float(python_version) == 3.8:
            env.Append( LIBS = [ 'boost_python38' ] )
        else:
            env.Append( LIBS = [ 'boost_python3' ] )
    else:
        env.Append( LIBS = [ 'boost_python' ] )
elif(platform.system() == "Windows"):
    env.Append( CPPPATH = [ Dir('C:/Boost/include/boost-1_66'), #path to boost include
                            Dir('C:/Python{}/include'.format(str(python_version).replace('.', ''))) ] ) # path to python include
    env.Append( LIBPATH = [ Dir('C:/Boost/lib'), # path to boost libs
                            Dir('C:/Python{}/libs'.format(str(python_version).replace('.', ''))) ] ) # path to python libs

    env.Append( CPPFLAGS = ' /EHsc /MD /D "WIN32" /D "_CONSOLE" /W4' )
    env.Append( LINKFLAGS = ' /SUBSYSTEM:WINDOWS ' )
else:
    print(platform.system() + " not supported")

#build C++ library
cpplib = env.SharedLibrary( target = 'lzw', source = ['src/lzwpy.cpp', 'src/lzw.cpp'])
if(platform.system() == "Linux"):
    target = '../build_web/lzwpy/lzw.so'
elif(platform.system() == "Windows"):
    target = '../build_web/lzwpy/lzw.pyd'
env.Command(target, cpplib, copyLibBuilder )

# build tests
SConscript('tests/SConscript', variant_dir='build', duplicate=0, exports=['env'])


# run tests
if test_opt is not None:
    print('scons: Running unit tests ...')
    os.system('./build/tests')
    print('scons: done running tests.')
    
